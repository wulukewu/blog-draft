[{"title":"Docker - Ubuntu SSH Setup","url":"/blog-draft/2024/11/docker-ubuntu-ssh-setup/","content":"Docker - Ubuntu SSH Setup\nHost: Use the same port -&gt; just change to the SSH\nport that does not conflict with NAS.\nEnvironment Settings\nfor Ubuntu Container\nDockerfile\nFROM ubuntu:latestRUN apt-get update &amp;&amp; apt-get install -y openssh-serverRUN mkdir /var/run/sshdRUN echo &#x27;root:your_password&#x27; | chpasswdRUN sed -i &#x27;s/PermitRootLogin prohibit-password/PermitRootLogin yes/&#x27; /etc/ssh/sshd_configRUN sed &#x27;s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g&#x27; -i /etc/pam.d/sshd# Other installationsRUN apt-get upgrade -yRUN apt-get install -y sudo nano vim curl gitEXPOSE 22CMD [&quot;/usr/sbin/sshd&quot;, &quot;-D&quot;]\nDocker Build and Push to\nDocker Hub\ndocker build -t ubuntu_ssh .docker tag ubuntu_ssh wulukewu/ubuntu_ssh:latestdocker push wulukewu/ubuntu_ssh:latest\nInstall OpenSSH-Server\napt-get update apt-get install -y openssh-servermkdir /var/run/sshdecho &#x27;root:your_password&#x27; | chpasswdsed -i &#x27;s/PermitRootLogin prohibit-password/PermitRootLogin yes/&#x27; /etc/ssh/sshd_configsed &#x27;s@session\\s*required\\s*pam_loginuid.so@session optional pam_loginuid.so@g&#x27; -i /etc/pam.d/sshd/usr/sbin/sshd -D\n\nPull and Run the ubuntu_ssh\nImage\nPull ubuntu_ssh from Docker\nHub\nsudo docker pull wulukewu/ubuntu_ssh:latest\nRun ubuntu_ssh in Host\nsudo docker run -d --net=host --name ubuntu_ssh wulukewu/ubuntu_ssh:latest\nAccess the Ubuntu Container\nsudo docker exec -i -t ubuntu_ssh /bin/bash\n\nHostname Configuration\nChange Hostname\nsudo nano /etc/hostnamesudo nano /etc/hostssudo reboot\nDisplay the Current Hostname\nhostname\n\nSSH Configuration\nChange SSH Port\nsudo nano /etc/ssh/sshd_configservice ssh restart\n\nUser Management\nAdd a New Sudo User\nadduser user_name\nAdd the User to the Sudo\nGroup\nusermod -aG sudo user_nameusermod -aG root user_name\nChange User Password\nsudo passwd user_name\nTest Sudo Access\nsu - user_name\n\nReferences\n\nHow\nto SSH into a Docker Container | Step-by-Step Tutorial\nSave\nDocker Image as a File\nUbuntu\nLinux Change Hostname\nDay 21:\nIntroduction to Docker Networking (Part 2)\nDocker\nBasic Commands Cheat Sheet\nHow\nto Create a New Sudo-Enabled User on Ubuntu\nChange\nPassword for Root and User Accounts\nAsk\nChatGPT\n\n","tags":["docker","ubuntu","ssh","devops","containerization","linux","tutorial"]},{"title":"設定GitHub SSH金鑰","url":"/blog-draft/2024/11/github-ssh-key/","content":"Setup\n\n根據email創建一個新的SSH金鑰\nssh-keygen -t rsa -b 4096 -C \"your_email@example.com\"\n開啟ssh-agent，將私鑰加入到ssh-agent\neval &quot;$(ssh-agent -s)&quot;ssh-add -K ~/.ssh/id_rsa\n上傳公鑰，並到GitHub上上傳SSH key\ncat ~/.ssh/id_rsa.pub GitHub Keys Settings \nssh連接GitHub SSH ssh -T git@github.com\n\nResources\n\n設定 Github\nSSH 金鑰 feat. Github SSH、HTTPS 的差異\nHow to clone, push, and pull\nwith git (beginners GitHub tutorial)\n\n","tags":["ssh","tutorial","github","git","setup"]},{"title":"Vue Basic Syntax","url":"/blog-draft/2025/01/vue-basic-syntax/","content":"Vue Basic Syntax\nDirectives\n\nEvent Binding: v-on or shorthand\n@click\nAttribute Binding: v-bind or shorthand\n:attribute\n\nExamples: :input, :input.enter,\n:key\n\nTwo-Way Binding: v-model\nConditional Rendering:\n\nv-if\nv-else-if\nv-else\nv-show\n\nList Rendering: v-for\n\nExample: v-for=\"goal in goals\"\n\n\nCommunication Between\nComponents\n\nProps: Pass data from parent to child\nEmits: Send events from child to parent\n\n","tags":["tutorial","vue","syntax","basics","guide"]},{"title":"量子計算基礎 - 從單量子位到多量子位系統","url":"/blog-draft/2025/04/quantum-system/","content":"量子計算基礎\n大一下去修了一門量子計算的課程，跟一般電路學不一樣的是引入了新設計的邏輯閘。\n\n單量子位系統\n(Single-Qubit Quantum Systems)\nHilbert 空間 (Vector Space)\n量子態存在於 Hilbert 空間\n中，這是一個複數向量空間。對於單量子位系統，我們有以下定義：\n\n|ψ⟩,|ϕ⟩ ∈ V，其中\nα, β ∈ ℂ\nα|ψ⟩+β|ψ⟩ ∈ V\n\n假設基底為 {|e1⟩,|e2⟩, …, |eN⟩}，對於\ndim = N 的向量空間：\n|ψ⟩=∑iαi|ei⟩,  αi ∈ ℂ\n其中： \nNote：單量子位 N = 2 的簡單空間，複數量子位 N = 32 的空間。\n範例\n我們拿一個例子來說明好了，假設： , ，那麼可以做下列這幾個運算：\n對偶向量 (Dual Vector)：\n\n\n\n\n內積 (Inner Product)：\n\n\n\n\n因此：\n\n⟨ϕ|ψ⟩≠⟨ψ|ϕ⟩*，表示\n⟨ϕ|ψ⟩≠⟨ψ|ϕ⟩\n⟨ψ|ψ⟩=0⟹|ψ⟩ 是正交\n(Orthogonal)\n\n向量範數 (Norm)：\n\n正規化向量 (Normalized Vector)：\n\n例如：\n\n計算內積：\n\n\n基底與投影運算子\n基底\n基底 {|e1⟩,|e2⟩, …, |eN⟩}\n滿足：\n\n正規化 (Normalized)：⟨ei|ei⟩=⟨e2|e2⟩ = … = ⟨eN|eN⟩ = 1\n正交 (Orthogoral)：⟨ei|ej⟩=⟨e2|e3⟩ = … = ⟨eN|eN⟩ = 0\n\n因此：\n\n範例\n假設基底：, \n那麼可以先求出對偶向量：\n計算：\n\n\n投影運算子 (Projection\nOperator)\n\n\n\n崩塌 (Collapse)：\n我們前面說過，|ψ⟩=∑iαi|ei⟩\n是由N維的基底所組成的。其中\n|ei⟩ 在\n|ψ⟩ 出現的機率為 |αi|2，則|α1|2 + |α2|2 + … + |αN|2 = 1。\n量子態 (Quantum State)：\n|ψ⟩=α1|e1⟩ + α2|e2⟩\nPi|ψ⟩→|ei⟩\n經典態\n經典態\nBloch 球 (Bloch Sphere)\nBloch 球用於表示單量子位的狀態：\n\n\nBloch Sphere\n\n\n|0⟩ → (0,0,1)\n|1⟩ → (0,0,−1)\n| + ⟩ → (1,0,0)\n| − ⟩ → (−1,0,0)\n|i⟩ → (0,1,0)\n| − i⟩ → (0,−1,0)\n\n\n多量子位系統\n(Multiple-Qubit Systems)\nHilbert 空間與張量積\n多量子位系統的 Hilbert 空間是單量子位空間的張量積：\nH2 ⊗ H2 ⊗ … ⊗ H2 = HN  (N\n個)\n假設：\n\n系統 1 的 Hilbert 空間 H2：{|0⟩,|1⟩}\n系統 2 的 Hilbert 空間 H2：{|0⟩,|1⟩}\n\n則：\n|ψ⟩=α0|0⟩ + β0|1⟩,  |ψ⟩ = α1|0⟩+β1|1⟩\n⟨0|0⟩=0,  ⟨0|1⟩ = 0\n⟨0|0⟩=1,  ⟨1|1⟩ = 1\n張量積：\nH2 ⊗ H2:\n|ψ1⟩⊗|ψ0⟩ = [α1|0⟩+β1|1⟩] ⊗ [α0|0⟩+β0|1⟩]\n = α1α0|0⟩⊗|0⟩ + α1β0|0⟩⊗|1⟩ + β1α0|1⟩⊗|0⟩ + β1β0|1⟩⊗|1⟩\n = α1α0|00⟩+α1β0|01⟩ + β1α0|10⟩+β1β0|11⟩\n因此：\n\n|0⟩⊗|0⟩ = |00⟩\n|0⟩⊗|1⟩ = |01⟩\n|1⟩⊗|0⟩ = |10⟩\n|1⟩⊗|1⟩ = |11⟩\n\n範例\n假設：\n\n系統 1 的 Hilbert 空間 H2：, \n系統 2 的 Hilbert 空間 H2：, \n\n計算張量積：\n\n\n運算子與單元矩陣\n運算子\n假設運算子 T：\nT(|ψ⟩⊗|ψ⟩) = αT(|ψ⟩) + βT(|ψ⟩)\n張量積運算子：\nT0 ⊗ T1 = T\n例如：\nI|ψ⟩=|ψ⟩\nT|ψ1⟩,|ψ0⟩  (T⊗I)(|ψ1⟩⊗|ψ0⟩)\n單位運算子：\n\n單元矩陣 (Unitary Matrix)\n假設 U 是單元矩陣：\n\n\n\n\n\n量子門與狀態轉換\n(Quantum Gates and State Transformations)\n常見量子門\nHadamard 門\n假設 H2 具有基底\nI, X, Y, Z：\n\nX|0⟩=|1⟩, X|1⟩=|0⟩, , X† = X\nY|0⟩=+i|1⟩, Y|1⟩=−i|0⟩, , Y† = Y\nZ|0⟩=|0⟩, Z|1⟩=−|1⟩, , Z† = Z\n\nHadamard 門：\nU = αI + βX + γY + δZ  (Bell\n態)\n糾纏態與測量\nBell 態\nBell 態：\n\n\n\n\n假設：\n|ψ1⟩=α1|0⟩ + β1|1⟩,  |ψ0⟩ = α0|0⟩+β0|1⟩\n|ψ1⟩⊗|ψ0⟩ = α1α0|00⟩+α1β0|01⟩ + β1α0|10⟩+β1β0|11⟩\n如果 α1β0 = 0，則為\n可分離態；否則為 糾纏態。\n糾纏態範例：\nα1α0|00⟩+β1β0|11⟩ ≠ |ψ1⟩⊗|ψ0⟩\n例如：\n|00⟩+|11⟩ = |0⟩⊗|0⟩ + |1⟩⊗|1⟩\n糾纏測量\n糾纏測量：\n\n系統 1 測量到 |0⟩，則系統 2 為\n|0⟩\n系統 1 測量到 |1⟩，則系統 2 為\n|1⟩\n\n逆向計算 (Reverse\nComputation)\nCNOT (Control NOT)\nCNOT 門的運作如下：\n\n\nCNOT Gate\n\n\n0 → 0, 1 → 1, |0⟩⊗|0⟩ = 1\n1 → 1, 1 → 0, |0⟩⊗|0⟩ = 0\n\nSWAP 門\nSWAP 門的運作如下：\n\n\nSWAP Gate\n\nCCNOT (Toffoli Gate)\nCCNOT 門的運作如下：\n\n\nCCNOT Gate\n\n\na = 0, b = 0 ⟹ ab = 0 ⟹ |c⊕ab⟩=|c ⊕ 0⟩ = |c⟩\n\n\nCCNOT 性質：\nCCNOT ⋅ CCNOT = I\nCCNOT† ⋅ CCNOT = I\nCCNOT† = CCNOT\n邏輯運算門\nAND 門\nAND 門的運作如下：\n\n\nAND Gate\n\nXOR 門\nXOR 門的運作如下：\n\n\nXOR Gate\n\nNAND 門\nNAND 門的運作如下：\n\n\nNAND Gate\n\nOR 門\nOR 門的運作如下：\n\n\nOR Gate\n\n範例\n以下是量子電路的等價性：\n\n\nQuantum Circuit Equivalence\n\n\n結論\n至此介紹了量子計算的基礎，從單量子位系統的 Hilbert\n空間、內積、正規化，到多量子位系統的張量積、糾纏態，以及量子門和狀態轉換。\n","tags":["quantum","hilbert-space","algorithms","physics"]}]